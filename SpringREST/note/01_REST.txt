01_REST.txt

# REST

 - Http URI로 어떤 자원인지 식별하고 Http Request Method로 해당 자원에 대한
   CRUD를 구분하여 데이터만 응답하는 방식   
 - HTML코드가 아닌 데이터만 응답하기 때문에 웹 브라우저가 아닌 다른 프로그램에서도 해당 서버를 활용할 수 있다는 장점이있다
 - Create, Insert에 해당, (POST)
 	ex> POST:/employee (새 사원을 추가한다)
 - Read, Select (GET을 보통 사용)
 	ex> GET:/employee/130 (130번 사원을 조회한다)
 - Update, Update (PUT)
 	ex> PUT:/employee/130 (130번 사원의 정보를 수정한다)
 - Delete, Delete (DELETE)
 ex> DELETE:/employee/130 (130번 사원을 삭제한다)
 	 똑같은 주소로 들어와도 어떤 메서드를 사용하느냐에 따라 달라 질 수 있다
 	 
# Spring REST

 - @RestController	: 해당 클래스가 RestController임을 표시
 - @ResponseBody	: 일반 컨트롤러 내부의 해당 메서드가 뷰 페이지 대신 데이터를 응답한다는 것을 표시
 - @RequestBody		: 요청에 실려온 데이터를 바인딩해주는 어노테이션
 - @PartVariable	: 요청 URI의 일부분을 변수로 활용할 수 있다 (일반 컨트롤러에서도 가능)
 	

# jackson-databind / jackson-dataformat-xml

 - @ResponseBody, @RestController로 자바빈 객체(DTO)응답하면
   JSON형식 또는 XML형식 문자열로 변환하여 응답해주는 라이브러리
 - 어떤 언어에서도  JSON / XML 형식은 해석하여 값으로 사용할 수 있기 때문에 범용성이 굉장히 높은 형식이다

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.15.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.15.3</version>
		</dependency>
		
# ResponseEntity 응답하기

 - 컨트롤러 메서드의 리턴 타입을 ResponseEntity로 설정하면 개발자가 직접 생성한 응답객체를 리턴할 수 있다.
 - 개발자가 직접 원하는 HTTP상태 코드(status), 컨텐츠 타입(content-type), 내용(body)들을 설정하여 
   만들어낸 응답 객체를 응답할 수 있다. 
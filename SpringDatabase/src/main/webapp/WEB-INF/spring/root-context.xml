<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--
	HikariConfig config = new HikariConfig();
		config.setJdbcUrl("jdbc:oracle:thin:@localhost:1521:XE");
		config.setUsername("hr");
		config.setPassword("1234");
		config.addDataSourceProperty("driverClassName", "oracle.jdbc.driver.OracleDriver");
		config.addDataSourceProperty("cachePrepStmts", "true");
		config.addDataSourceProperty("prepStmtCacheSize", "250");
		config.addDataSourceProperty("prepStmtCacheSqlLimit", "2048");
		
		 -->
	<!-- 프로젝트에 포함한 라이브러리의 클래스로 빈을 만들어 활용할 수 있다 -->
	<!-- 필요한 장소에 주입하기 위한 준비 -->	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"> 
	<!-- <property name ="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> -->
	<property name ="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
	<!-- <property name ="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE"/> -->
	<property name ="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"/>
	<property name ="username" value="hr"/>
	<property name ="password" value="1234"/>
	</bean>
	
	<!-- 데이터소스를 만들어주는것 -->
	<bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource">
	<constructor-arg ref="hikariConfig"/>
	</bean>
	
	
	<!-- 데이터소스를 재료로 써서 action Factory만들기 -->
	<!-- SQL SESSION이 나오는 공장이다. 쿼리문만 전달하면, 결과를 리턴해주는 세션이다 -->
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="hikariDataSource"/>
	</bean>
	
	<mybatis-spring:scan base-package="com.ezen.springdb.mapper"/> 
</beans>
